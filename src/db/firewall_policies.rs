//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.7

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "firewall_policies")]
pub struct Model {
    pub tenant_id: Option<String>,
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub name: Option<String>,
    pub description: Option<String>,
    pub shared: Option<i8>,
    pub audited: Option<i8>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::firewall_rules::Entity")]
    FirewallRules,
    #[sea_orm(has_many = "super::firewalls::Entity")]
    Firewalls,
}

impl Related<super::firewall_rules::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::FirewallRules.def()
    }
}

impl Related<super::firewalls::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Firewalls.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
