//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.7

use super::sea_orm_active_enums::DpdAction;
use super::sea_orm_active_enums::Initiator;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "ipsec_site_connections")]
pub struct Model {
    pub tenant_id: Option<String>,
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub name: Option<String>,
    pub description: Option<String>,
    pub peer_address: String,
    pub peer_id: String,
    pub route_mode: String,
    pub mtu: i32,
    pub initiator: Initiator,
    pub auth_mode: String,
    pub psk: String,
    pub dpd_action: DpdAction,
    pub dpd_interval: i32,
    pub dpd_timeout: i32,
    pub status: String,
    pub admin_state_up: i8,
    pub vpnservice_id: String,
    pub ipsecpolicy_id: String,
    pub ikepolicy_id: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::ikepolicies::Entity",
        from = "Column::IkepolicyId",
        to = "super::ikepolicies::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Ikepolicies,
    #[sea_orm(has_many = "super::ipsecpeercidrs::Entity")]
    Ipsecpeercidrs,
    #[sea_orm(
        belongs_to = "super::ipsecpolicies::Entity",
        from = "Column::IpsecpolicyId",
        to = "super::ipsecpolicies::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Ipsecpolicies,
    #[sea_orm(
        belongs_to = "super::vpnservices::Entity",
        from = "Column::VpnserviceId",
        to = "super::vpnservices::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Vpnservices,
}

impl Related<super::ikepolicies::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Ikepolicies.def()
    }
}

impl Related<super::ipsecpeercidrs::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Ipsecpeercidrs.def()
    }
}

impl Related<super::ipsecpolicies::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Ipsecpolicies.def()
    }
}

impl Related<super::vpnservices::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Vpnservices.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
